import cv2
from ultralytics import YOLO
import math
from gtts import gTTS
import tempfile
import os
import pygame
import time

cam = cv2.VideoCapture(0)

nomes_classes = ["person", "bicycle", "car", "motorcycle", "airplane", "bus", "train", "truck", "boat",
                 "traffic light", "fire hydrant", "stop sign", "parking meter", "bench", "bird", "cat", "dog",
                 "horse", "sheep", "cow", "elephant", "bear", "zebra", "giraffe", "backpack", "umbrella",
                 "handbag", "tie", "suitcase", "frisbee", "skis", "snowboard", "sports ball", "kite",
                 "baseball bat", "baseball glove", "skateboard", "surfboard", "tennis racket", "bottle",
                 "wine glass", "cup", "fork", "knife", "spoon", "bowl", "banana", "apple", "sandwich",
                 "orange", "broccoli", "carrot", "hot dog", "pizza", "donut", "cake", "chair", "couch",
                 "potted plant", "bed", "dining table", "toilet", "tv", "laptop", "mouse", "remote",
                 "keyboard", "cell phone", "microwave", "oven", "toaster", "sink", "refrigerator", "book", "clock",
                 "vase", "scissors", "teddy bear", "hair drier", "toothbrush"]

nomes_classes_traduzido = {
    "person": "pessoa", "bicycle": "bicicleta", "car": "carro", "motorcycle": "motocicleta", "airplane": "avião", "bus": "ônibus", "train": "trem", "truck": "caminhão", "boat": "navio",
    "traffic light": "semáforo", "fire hydrant": "hidrante", "stop sign": "placa de pare", "parking meter": "parquímetro", "bench": "banco", "bird": "pássaro", "cat": "gato",
    "dog": "cachorro", "horse": "cavalo", "sheep": "ovelha", "cow": "vaca", "elephant": "elefante", "bear": "urso", "zebra": "zebra", "giraffe": "girafa", "backpack": "mochila", "umbrella": "guarda-chuva",
    "handbag": "bolsa de mão", "tie": "gravata", "suitcase": "mala", "frisbee": "frisbee", "skis": "esquis", "snowboard": "snowboard", "sports ball": "bola de esportes", "kite": "pipa", "baseball bat": "taco de baseball",
    "baseball glove": "luva de baseball", "skateboard": "skate", "surfboard": "prancha de surf", "tennis racket": "raquete de tênis", "bottle": "garrafa", "wine glass": "taça de vinho", "cup": "copo",
    "fork": "garfo", "knife": "faca", "spoon": "colher", "bowl": "tigela", "banana": "banana", "apple": "maçã", "sandwich": "sanduíche", "orange": "laranja", "broccoli": "brócolis",
    "carrot": "cenoura", "hot dog": "cachorro quente", "pizza": "pizza", "donut": "donut", "cake": "bolo", "chair": "cadeira", "couch": "sofá", "potted plant": "planta", "bed": "cama",
    "dining table": "mesa de jantar", "toilet": "banheiro", "tv": "tv", "laptop": "notebook", "mouse": "mouse", "remote": "controle remoto", "keyboard": "teclado", "cell phone": "celular",
    "microwave": "microondas", "oven": "forno", "toaster": "torradeira", "sink": "pia", "refrigerator": "geladeira", "book": "livro", "clock": "relógio", "vase": "vaso", "scissors": "tesoura",
    "teddy bear": "urso de pelúcia", "hair drier": "secador", "toothbrush": "escova de dente"
}

modelo = YOLO("yolov8n.pt")

cam = cv2.VideoCapture(0)
if not cam.isOpened():
    print("Erro ao abrir a câmera!")
    exit()

pygame.mixer.init()

pontos_centro = []
largura_frame = int(cam.get(3))
altura_frame = int(cam.get(4))

contador = 0
pontos_centro_frame_anterior = []
objetos_em_traco = {}
id_traco = 0

while cam.isOpened():
    pontos_centro_frame_atual = []
    contador += 1
    ret, frame = cam.read()

    if ret:
        resultados = modelo(frame, stream=True)
        for r in resultados:
            caixas = r.boxes
            for caixa in caixas:
                x1, y1, x2, y2 = map(int, caixa.xyxy[0])
                cx = (x2 + x1) // 2
                cy = (y2 + y1) // 2
                pontos_centro_frame_atual.append((cx, cy))
                cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 3)
                conf = round(caixa.conf[0] * 100) / 100
                cls = int(caixa.cls[0])
                nome_classe = nomes_classes_traduzido.get(nomes_classes[cls], "Desconhecido")
                rotulo = f'{nome_classe} {conf}'
                tamanho_texto = cv2.getTextSize(rotulo, 0, fontScale=1, thickness=2)[0]
                c2 = x1 + tamanho_texto[0], y1 - tamanho_texto[1] - 3
                cv2.rectangle(frame, (x1, y1), c2, [255, 0, 0], -1, cv2.LINE_AA)
                cv2.putText(frame, rotulo, (x1, y1 - 2), 0, 1, [255, 255, 255], thickness=1, lineType=cv2.LINE_AA)
                with tempfile.NamedTemporaryFile(delete=False, suffix=".mp3") as arquivo_audio_temp:
                    caminho_arquivo_audio_temp = arquivo_audio_temp.name
                    tts = gTTS(text=nome_classe, lang='pt')
                    tts.save(caminho_arquivo_audio_temp)
                time.sleep(1)
                if os.path.exists(caminho_arquivo_audio_temp):
                    pygame.mixer.music.load(caminho_arquivo_audio_temp)
                    pygame.mixer.music.play()
        frame_redimensionado = cv2.resize(frame, (0, 0), fx=0.6, fy=0.6, interpolation=cv2.INTER_AREA)
        cv2.imshow("Frame", frame_redimensionado)
        if cv2.waitKey(1) & 0xFF == ord('1'):
            break
    else:
        break

cam.release()
cv2.destroyAllWindows()
